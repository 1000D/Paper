From ab14cea93e0cc8bcb7a3b89ff0a4313863fffd78 Mon Sep 17 00:00:00 2001
From: Byteflux <byte@byteflux.net>
Date: Sun, 24 Sep 2017 15:24:34 -0400
Subject: [PATCH] Entity Origin API


diff --git a/src/main/java/net/minecraft/entity/Entity.java b/src/main/java/net/minecraft/entity/Entity.java
index b3dd29b..cbe6b33 100644
--- a/src/main/java/net/minecraft/entity/Entity.java
+++ b/src/main/java/net/minecraft/entity/Entity.java
@@ -211,6 +211,7 @@ public abstract class Entity implements ICommandSender {
     public final boolean defaultActivationState;
     public long activatedTick = -2147483648L;
     public boolean fromMobSpawner;
+    public Location origin; // Paper
 
     static boolean isLevelAtLeast(NBTTagCompound tag, int level) {
         return tag.hasKey("Bukkit.updateLevel") && tag.getInteger("Bukkit.updateLevel") >= level;
@@ -1589,6 +1590,12 @@ public abstract class Entity implements ICommandSender {
                 }
             }
 
+            // Paper start - Save the entity's origin location
+            if (origin != null) {
+                compound.setTag("Paper.Origin", this.newDoubleNBTList(origin.getX(), origin.getY(), origin.getZ()));
+            }
+            // Paper end
+
             return compound;
         } catch (Throwable var6) {
             CrashReport crashreport = CrashReport.makeCrashReport(var6, "Saving entity NBT");
@@ -1710,6 +1717,13 @@ public abstract class Entity implements ICommandSender {
 
                 this.setWorld(bworld == null ? null : ((CraftWorld) bworld).getHandle());
             }
+
+            // Paper start - Restore the entity's origin location
+            NBTTagList originTag = compound.getTagList("Paper.Origin", 6);
+            if (!originTag.hasNoTags()) {
+                origin = new Location(world.getWorld(), originTag.getDoubleAt(0), originTag.getDoubleAt(1), originTag.getDoubleAt(2));
+            }
+            // Paper end
         } catch (Throwable var9) {
             CrashReport crashreport = CrashReport.makeCrashReport(var9, "Loading entity NBT");
             CrashReportCategory crashreportsystemdetails = crashreport.makeCategory("Entity being loaded");
diff --git a/src/main/java/net/minecraft/entity/item/EntityFallingBlock.java b/src/main/java/net/minecraft/entity/item/EntityFallingBlock.java
index ede979a..9743533 100644
--- a/src/main/java/net/minecraft/entity/item/EntityFallingBlock.java
+++ b/src/main/java/net/minecraft/entity/item/EntityFallingBlock.java
@@ -301,6 +301,15 @@ public class EntityFallingBlock extends Entity {
         if (block == null || block.getDefaultState().getMaterial() == Material.AIR) {
             this.fallTile = Blocks.SAND.getDefaultState();
         }
+
+        // Paper start - Try and load origin location from the old NBT tags for backwards compatibility
+        if (compound.hasKey("SourceLoc_x")) {
+            int srcX = compound.getInteger("SourceLoc_x");
+            int srcY = compound.getInteger("SourceLoc_y");
+            int srcZ = compound.getInteger("SourceLoc_z");
+            origin = new org.bukkit.Location(world.getWorld(), srcX, srcY, srcZ);
+        }
+        // Paper end
     }
 
     public void setHurtEntities(boolean p_145806_1_) {
diff --git a/src/main/java/net/minecraft/entity/item/EntityTNTPrimed.java b/src/main/java/net/minecraft/entity/item/EntityTNTPrimed.java
index 6bc1980..d243cb8 100644
--- a/src/main/java/net/minecraft/entity/item/EntityTNTPrimed.java
+++ b/src/main/java/net/minecraft/entity/item/EntityTNTPrimed.java
@@ -119,6 +119,14 @@ public class EntityTNTPrimed extends Entity {
 
     protected void writeEntityToNBT(NBTTagCompound compound) {
         compound.setShort("Fuse", (short) this.getFuse());
+        // Paper start - Try and load origin location from the old NBT tags for backwards compatibility
+        if (compound.hasKey("SourceLoc_x")) {
+            int srcX = compound.getInteger("SourceLoc_x");
+            int srcY = compound.getInteger("SourceLoc_y");
+            int srcZ = compound.getInteger("SourceLoc_z");
+            origin = new org.bukkit.Location(world.getWorld(), srcX, srcY, srcZ);
+        }
+        // Paper end
     }
 
     protected void readEntityFromNBT(NBTTagCompound compound) {
diff --git a/src/main/java/net/minecraft/world/World.java b/src/main/java/net/minecraft/world/World.java
index a2c550a..9dd1e79 100644
--- a/src/main/java/net/minecraft/world/World.java
+++ b/src/main/java/net/minecraft/world/World.java
@@ -1150,6 +1150,12 @@ public abstract class World implements IBlockAccess {
             int j = MathHelper.floor(entity.posZ / 16.0D);
             boolean flag = entity.forceSpawn;
 
+            // Paper start - Set origin location when the entity is being added to the world
+            if (entity.origin == null) {
+                entity.origin = entity.getBukkitEntity().getLocation();
+            }
+            // Paper end
+
             if (entity instanceof EntityPlayer) {
                 flag = true;
             }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index 22b0f91..045ff5b 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -1048,6 +1048,14 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
         return perm;
     }
 
+    // Paper start
+    @Override
+    public Location getOrigin() {
+        Location origin = getHandle().origin;
+        return origin == null ? null : origin.clone();
+    }
+    // Paper end
+
     public Spigot spigot() {
         return this.spigot;
     }
-- 
2.14.2

