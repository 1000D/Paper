From 9945d3065c7d4c292b8432b1e40eeec31c31729f Mon Sep 17 00:00:00 2001
From: BillyGalbreath <Blake.Galbreath@GMail.com>
Date: Fri, 10 Nov 2017 23:03:12 -0500
Subject: [PATCH] Option for maximum exp value when merging orbs


diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index e48e871..d2c5c44 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -454,4 +454,10 @@ public class PaperWorldConfig {
         replacementBlocks = getList("anti-xray.replacement-blocks", Arrays.asList((Object) "stone", "planks"));
         log("Anti-Xray: " + (antiXray ? "enabled" : "disabled") + " / Engine Mode: " + engineMode.getDescription() + " / Chunk Edge Mode: " + chunkEdgeMode.getDescription() + " / Up to " + ((maxChunkSectionIndex + 1) * 16) + " blocks");
     }
+
+    public int expMergeMaxValue;
+    private void expMergeMaxValue() {
+        expMergeMaxValue = getInt("experience-merge-max-value", -1);
+        log("Experience Merge Max Value: " + expMergeMaxValue);
+    }
 }
diff --git a/src/main/java/net/minecraft/world/World.java b/src/main/java/net/minecraft/world/World.java
index 9cbeb2d..3eb2cc6 100644
--- a/src/main/java/net/minecraft/world/World.java
+++ b/src/main/java/net/minecraft/world/World.java
@@ -1177,18 +1177,33 @@ public abstract class World implements IBlockAccess {
                 double radius = this.spigotConfig.expMerge;
 
                 if (radius > 0.0D) {
+                    // Paper start - Maximum exp value when merging - Whole section has been tweaked, see comments for specifics
+                    final int maxValue = paperConfig.expMergeMaxValue;
+                    final boolean mergeUnconditionally = maxValue <= 0;
+                    if (mergeUnconditionally || xp.xpValue < maxValue) { // Paper - Skip iteration if unnecessary
+
+
                     for (Entity e :
                             this.getEntitiesWithinAABBExcludingEntity(entity, entity.getEntityBoundingBox().grow(radius, radius, radius))) {
                         if (e instanceof EntityXPOrb) {
                             EntityXPOrb loopItem = (EntityXPOrb) e;
 
-                            if (!loopItem.isDead) {
+                            if (!loopItem.isDead && !(maxValue > 0 && loopItem.xpValue >= maxValue)) { // Paper
                                 xp.xpValue += loopItem.xpValue;
+                                // Paper start
+                                if (!mergeUnconditionally && xp.xpValue > maxValue) {
+                                    loopItem.xpValue = xp.xpValue - maxValue;
+                                    xp.xpValue = maxValue;
+                                    break;
+                                }
+                                // Paper end
                                 loopItem.setDead();
                             }
                         }
                     }
                 }
+
+                } // Paper end - End iteration skip check - All tweaking ends here
             }
 
             if (event == null || !event.isCancelled() && !entity.isDead) {
-- 
2.15.0.windows.1

