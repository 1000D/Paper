From 0e86c660e9a4442f15351c28b2beb151d70af09f Mon Sep 17 00:00:00 2001
From: Shane Freeder <theboyetronic@gmail.com>
Date: Thu, 5 Oct 2017 01:54:07 +0100
Subject: [PATCH] handle PacketPlayInKeepAlive async and revert keepalive limit

In 1.12.2, Mojang moved the processing of PacketPlayInKeepAlive off the main
thread, while entirely correct for the server, this causes issues with
plugins which are expecting the PlayerQuitEvent on the main thread.

In order to counteract some bad behavior, we will post handling of the
disconnection to the main thread, but leave the actual processing of the packet
off the main thread.

We also revert the bump on the servers built in keepalive back to 15 seconds,
this solves a read timeout in scenarios where the client isn't sending data to
the server, e.g. spectating an entity.

diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 69ed84af9..b18bf4245 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -180,8 +180,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
         this.minecraftServer.methodProfiler.a("keepAlive");
         long i = this.d();
-
-        if (i - this.f >= 25000L) { // CraftBukkit
+        if (i - this.f >= 15000L) { // CraftBukkit // Paper - revert to 15
             if (this.g) {
                 this.disconnect(new ChatMessage("disconnect.timeout", new Object[0]));
             } else {
@@ -2225,14 +2224,18 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
     }
 
     public void a(PacketPlayInKeepAlive packetplayinkeepalive) {
-        PlayerConnectionUtils.ensureMainThread(packetplayinkeepalive, this, this.player.x()); // CraftBukkit
+        //PlayerConnectionUtils.ensureMainThread(packetplayinkeepalive, this, this.player.x()); // CraftBukkit // Paper - This shouldn't be on the main thread
         if (this.g && packetplayinkeepalive.a() == this.h) {
             int i = (int) (this.d() - this.f);
 
             this.player.ping = (this.player.ping * 3 + i) / 4;
             this.g = false;
         } else if (!this.player.getName().equals(this.minecraftServer.Q())) {
-            this.disconnect(new ChatMessage("disconnect.timeout", new Object[0]));
+            // Paper start - This needs to be handled on the main thread for plugins
+            minecraftServer.postToMainThread(() -> {
+                    this.disconnect(new ChatMessage("disconnect.timeout", new Object[0]));
+            });
+            // Paper end
         }
 
     }
-- 
2.14.2

